---
title: "20220705_fpl"
author: "Arif P. Sulistiono / @arifpras"
format: html
editor: visual
---

```{r}
# Remove all items in Environment!
rm(list = ls())
ls()

# Load packages
pacman::p_load(tidyverse, data.table, readxl, writexl, glue, wesanderson,
               RColorBrewer, viridis, ggrepel, ggthemes, ggsci, mFilter,
               quantmod, corrplot, cowplot, readstata13, readr, knitr, 
               kableExtra, stargazer, parameters, colorspace, dendextend,
               ggdendro, purrr, cluster, plotly, DescTools, factoextra, 
               grid, gridExtra, ggsoccer, RCurl, tidytext, rvest, fplscrapR)

options(tz = "Europe/London")

# Working directory
setwd("~/OneDrive - The University of Nottingham/BB_SideProject/2022FPL")
```

```{r}
#https://medium.com/analytics-vidhya/getting-started-with-fantasy-premier-league-data-56d3b9be8c32

library(jsonlite)

stat00 <- fromJSON("https://fantasy.premierleague.com/api/bootstrap-static/")
```

```{r}
#team
stat01 <- tibble(stat00$teams) %>% 
  select(id, name, short_name, strength)

head(stat01)
```

```{r}
#player
stat02 <- tibble(stat00$elements) %>%
  select(
    first_name,
    id,
    now_cost,
    points_per_game,
    second_name,
    selected_by_percent,
    team,
    team_code,
    total_points,
    value_form,
    value_season,
    web_name,
    minutes,
    goals_scored,
    assists,
    clean_sheets,
    goals_conceded,
    saves,
    bps,
    influence,
    creativity,
    threat,
    ict_index,
    influence_rank,
    influence_rank_type,
    creativity_rank,
    creativity_rank_type,
    threat_rank,
    threat_rank_type,
    ict_index_rank,
    ict_index_rank_type,
    element_type
  ) %>% 
  mutate(
    now_cost = now_cost / 10
  )

head(stat02)
```

```{r}
stat03 <- tibble(stat00$element_stats)
head(stat03)
```

```{r}
stat04 <- tibble(stat00$element_types) %>%
  select(id, singular_name, singular_name_short)

head(stat04)
```

```{r}
stat05 <- stat02 %>% 
  left_join(stat01, by = c("team" = "id")) 

stat05 %>% 
  select(first_name, second_name, name) %>% 
  slice_head(n = 5)
```

```{r}
stat06 <- stat05 %>% 
  left_join(stat04, by = c("element_type" = "id")) %>% 
  rename(
    "team_name" = name,
    "position_name" = singular_name
  )

stat06 %>% 
  select(first_name, second_name, team_name, position_name) %>% 
  slice_head(n = 5)
```

```{r}
stat07 <- stat06 %>%
  mutate_if(is.integer, as.numeric) %>%
  relocate(
    id,
    web_name,
    team_name,
    position_name,
    now_cost,
    points_per_game,
    selected_by_percent,
    minutes,
    influence,
    creativity,
    threat,
    ict_index
  )

#str(stat07)
#sapply(stat07, class)

col01 <-
  c(
    "points_per_game",
    "selected_by_percent",
    "value_form",
    "value_season",
    "influence",
    "creativity",
    "threat",
    "ict_index"
  )

stat07[col01] <- sapply(stat07[col01], as.numeric)
str(stat07)
```

```{r}
# remotes::install_github("wiscostret/fplscrapR", force = TRUE)

#library(fplscrapR)

# id <- "13324"
```

```{r}
# pl01 <- get_player_ids(season = NULL)
```

```{r}
# pl02 <- get_player_hist(playerid=200)
# pl02 <- get_player_hist(playerid="Virgil van Dijk")
# pl03 <- get_player_details(name="Virgil van Dijk")
```

```{r}
# gm01 <- get_game_list(season = NULL)

```

```{r}
# stat00 <- "https://fantasy.premierleague.com/statistics"
# stat01 <- read_html(stat00)
# 
# stat02 <- stat01 %>%
#   html_node("body") %>%
#   html_children()
# 
# stat03 <- html_nodes(stat02, xpath = '//*[@id="root"]/div[2]/div/div[1]/table')
# 
# stat04 <- html_text(stat03)
# stat05 <- data.frame(stat04)
# 
# stat06 <-
#   as.data.frame(matrix(stat05$stat04, ncol = 6, byrow = TRUE))
```

```{r}
# link01 <- read_html("https://fantasy.premierleague.com/statistics")
# 
# link01 %>% 
#   html_nodes(xpath = '//*[@id="root"]/div[2]/div/div[1]/table') %>% html_table()
```

```{r}
# #install.packages("rvest")
# library(rvest)
# #https://pburgoine.github.io/2017/06/web-scraping-fantasy-football-data-using-r/
# 
# ###############################################
# 
# #Function to scrape site
# fplscraper <- function(gameweek){
#   url_week = paste("http://fantasy.premierleague.com/a/team/13324/event/", gameweek, sep="")
#   
#   # render HTML from the site with phantomjs
#  repeat{ 
#   writeLines(sprintf("var page = require('webpage').create();
#                      page.open('%s', function () {
#                      console.log(page.content); //page source
#                      phantom.exit();
#                      });", url_week), con="scrape.js")
# 
#   system("phantomjs scrape.js > scrape.html")
#   
#   # extract the content you need
#   html_week = read_html("scrape.html")
#   
#   # check extract worked properly
#   if(length(html_week %>% html_nodes("#ismr-pos1") %>% html_nodes(".ism-element__name") %>% html_text()>0)) break
#   print("Extract failed...retrying")
# }
#   
#   print("Record extracted")
# return(html_week)
# }
```

```{r}
# #Function to search extract data from specific gameweek
# calc_points <- function(fpl_data){
#   
#   players = c(1:15)
#   Players_Names = c()
#   Players_Points = c()
#   Players_Team = c()
#   Players_Captain = c()
#   Players_Played = c()
#   
#   for (player in players){
#   
#   player_pos <- paste("#ismr-pos", player,sep="")
#   player_name <- as.character(fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text())
#   player_data <- as.numeric(fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text())
#   player_shirt <- fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
#   player_team <- as.character(html_attr(player_shirt, "title"))
#   player_cap = fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
#   player_captain = as.character(html_attr(player_cap, "title"))
#   if (length(player_captain)==0){player_captain = NA}
#   player_played = "Blank"
#   if (player<12) {player_played <- "Played"} else {player_played <- "Benched"}
#   
#   Players_Names = c(Players_Names,player_name)
#   Players_Points = c(Players_Points,player_data)
#   Players_Team = c(Players_Team,player_team)
#   Players_Captain = c(Players_Captain,player_captain)
#   Players_Played = c(Players_Played,player_played)
#   
#   }
#   
#   df <- list(Players_Names,Players_Points,Players_Team,Players_Captain,Players_Played)
#   return(df)
# }

```

```{r}
# #Function to bind all our gameweeks into one final data set
# 
# data_merge <- function(fpl_data){
#   
#   all_players = c()
#   for (gw in c(1:38)) {
#     all_players = c(all_players, paste(all_gw[[gw]][[1]],all_gw[[gw]][[3]],sep=";"))
#   }
#   
#   unique_players = unique(all_players)
#   result = matrix(NA,nrow = length(unique_players), ncol = 116)  
#   
#   
#   unique_names = strsplit(unique_players,';',fixed=TRUE)
#   
#   split_names = gsub(";.*", "", unique_players)
#   split_teams = gsub(".*;", "", unique_players)
#   
# 
#   final_data = data.frame(result)
#   
#   names(final_data) <- c("Player", "Team", paste0("GW", 1:38),paste0("CAP", 1:38),paste0("PLAY", 1:38))
#   final_data$Player <- split_names
#   final_data$Team <- split_teams
#   
#   for(ngw in c(1:38)){
#     
#     match_indexes = match(all_gw[[ngw]][[1]],split_names)
#     
#     for (matches in c(1:15)){
#       final_data[[2+ngw]][match_indexes[matches]] = all_gw[[ngw]][[2]][matches]
#       final_data[[40+ngw]][match_indexes[matches]] = all_gw[[ngw]][[4]][matches]
#       final_data[[78+ngw]][match_indexes[matches]] = all_gw[[ngw]][[5]][matches]
#     }
#     
#     
#   }
#   
#   return(final_data)
# 
# }

```

```{r}
# #Call our functions
# gameweeks <- c(1:38)
# gameweek_data<- lapply(gameweeks,fplscraper)
# all_gw<-lapply(gameweek_data,calc_points)
# final_dataset<-data_merge(all_gw)
# 
# 
# #Save to csv
# write.csv(final_dataset, file = "FPLdata2223.csv",fileEncoding = "UTF-8")
```
