fixt04 <- html_text(fixt03)
fixt05 <- data.frame(fixt04)
View(fixt05)
stat00 <- "https://fantasy.premierleague.com/statistics"
stat01 <- read_html(stat00)
stat02 <- stat01 %>%
html_node("body") %>%
html_children()
stat03 <- html_nodes(stat02, '.wXYnc')
stat04 <- html_text(stat03)
stat05 <- data.frame(stat04)
stat03 <- html_nodes(stat02, 'wXYnc')
stat03 <- html_nodes(stat02, 'th')
stat03 <- html_nodes(stat02, 'tr th')
stat03 <- html_nodes(stat02, 'td')
stat03 <- html_nodes(stat02, 'tr th')
stat03 <- html_nodes(stat02, 'tr')
stat03 <- html_nodes(stat02, 'th')
View(stat02)
View(fixt02)
View(fixt03)
xml_attrs(fixt02[[2]])
stat03 <- html_nodes(stat02, 'chuxIu')
stat03 <- html_nodes(stat02, '.chuxIu')
stat00 <- "https://fantasy.premierleague.com/statistics"
stat01 <- read_html(stat00)
stat02 <- stat01 %>%
html_node("body") %>%
html_children()
stat03 <- html_nodes(stat02, 'td')
stat04 <- html_text(stat03)
stat05 <- data.frame(stat04
stat04 <- html_text(stat03)
stat00 <- "https://fantasy.premierleague.com/statistics"
stat01 <- read_html(stat00)
stat02 <- stat01 %>%
html_node("body") %>%
html_children()
stat03 <- html_nodes(stat02, 'td')
stat04 <- html_text(stat03)
stat05 <- data.frame(stat04)
stat02 <- stat01 %>%
html_node("td") %>%
html_children()
View(stat02)
stat00 <- "https://fantasy.premierleague.com/statistics"
stat01 <- read_html(stat00)
stat02 <- stat01 %>%
html_node("body") %>%
html_children()
?html_nodes
if (!require("devtools")) install.packages("devtools")
devtools::install_github("wiscostret/fplscrapR") #dependency
devtools::install_github("jogall/fantasypl")
# load package and
library(fantasypl)
library(dplyr)
player_points()
player_points("Salah")
remotes::install_github("wiscostret/fplscrapR")
library(fplscrapR)
remotes::install_github("wiscostret/fplscrapR", force = TRUE)
library(fplscrapR)
get_player_details()
pl01 <- get_player_ids(season = NULL)
View(pl01)
rm(list = ls())
ls()
pl01 <- get_player_ids(season = NULL)
View(pl01)
pl02 <- get_player_details(
300
)
View(pl02)
pl02 <- get_player_details(
300, season = "22"
)
pl02 <- get_player_details(
300, season = "21"
)
pl02 <- get_player_details(
300, season = '22'
)
pl02 <- get_player_hist(playerid=200)
View(pl02)
gm01 <- get_game_list(season = NULL)
View(gm01)
pl02 <- get_player_hist(playerid=200)
pl03 <- get_player_details(name="Virgil van Dijk")
View(pl03)
View(pl02)
pl02 <- get_player_hist(playerid="Virgil van Dijk")
link01 <- read_html("https://fantasy.premierleague.com/statistics")
link01 %>%
html_nodes(".bftysz") %>% html_text()
View(link01)
link01 <- read_html("https://fantasy.premierleague.com/statistics")
link01 %>%
html_nodes(xpath = '//*[@id="root"]/div[2]/div/div[1]/table') %>% html_table()
list()
stat00 <- "https://fantasy.premierleague.com/statistics"
stat01 <- read_html(stat00)
stat02 <- stat01 %>%
html_node("body") %>%
html_children()
stat03 <- html_nodes(stat02, xpath = '//*[@id="root"]/div[2]/div/div[1]/table')
View(stat03)
View(stat02)
stat03 <- html_node(stat02, xpath = '//*[@id="root"]/div[2]/div/div[1]/table')
link01 <- read_html("https://fantasy.premierleague.com/statistics")
link01 %>%
html_nodes(xpath = '//*[@id="root"]/div[2]/div/div[1]/table') %>% html_text()
link01 <- read_html("https://fantasy.premierleague.com/statistics")
link01 %>%
html_nodes(xpath = '//*[@id="root"]/div[2]/div/div[1]/table') %>% html_table()
#install.packages("rvest")
library(rvest)
###############################################
#Function to scrape site
fplscraper <- function(gameweek){
url_week = paste("http://fantasy.premierleague.com/a/team/13324/event/", gameweek, sep="")
# render HTML from the site with phantomjs
repeat{
writeLines(sprintf("var page = require('webpage').create();
page.open('%s', function () {
console.log(page.content); //page source
phantom.exit();
});", url_week), con="scrape.js")
system("phantomjs scrape.js > scrape.html")
# extract the content you need
html_week = read_html("scrape.html")
# check extract worked properly
if(length(html_week %>% html_nodes("#ismr-pos1") %>% html_nodes(".ism-element__name") %>% html_text()>0)) break
print("Extract failed...retrying")
}
print("Record extracted")
return(html_week)
}
#Function to search extract data from specific gameweek
calc_points <- function(fpl_data){
players = c(1:15)
Players_Names = c()
Players_Points = c()
Players_Team = c()
Players_Captain = c()
Players_Played = c()
for (player in players){
player_pos <- paste("#ismr-pos", player,sep="")
player_name <- as.character(fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__name") %>% html_text())
player_data <- as.numeric(fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__data") %>% html_text())
player_shirt <- fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__shirt")
player_team <- as.character(html_attr(player_shirt, "title"))
player_cap = fpl_data %>% html_nodes(player_pos) %>% html_nodes(".ism-element__control--captain") %>% html_nodes(".ism-element__icon")
player_captain = as.character(html_attr(player_cap, "title"))
if (length(player_captain)==0){player_captain = NA}
player_played = "Blank"
if (player<12) {player_played <- "Played"} else {player_played <- "Benched"}
Players_Names = c(Players_Names,player_name)
Players_Points = c(Players_Points,player_data)
Players_Team = c(Players_Team,player_team)
Players_Captain = c(Players_Captain,player_captain)
Players_Played = c(Players_Played,player_played)
}
df <- list(Players_Names,Players_Points,Players_Team,Players_Captain,Players_Played)
return(df)
}
#Function to bind all our gameweeks into one final data set
data_merge <- function(fpl_data){
all_players = c()
for (gw in c(1:38)) {
all_players = c(all_players, paste(all_gw[[gw]][[1]],all_gw[[gw]][[3]],sep=";"))
}
unique_players = unique(all_players)
result = matrix(NA,nrow = length(unique_players), ncol = 116)
unique_names = strsplit(unique_players,';',fixed=TRUE)
split_names = gsub(";.*", "", unique_players)
split_teams = gsub(".*;", "", unique_players)
final_data = data.frame(result)
names(final_data) <- c("Player", "Team", paste0("GW", 1:38),paste0("CAP", 1:38),paste0("PLAY", 1:38))
final_data$Player <- split_names
final_data$Team <- split_teams
for(ngw in c(1:38)){
match_indexes = match(all_gw[[ngw]][[1]],split_names)
for (matches in c(1:15)){
final_data[[2+ngw]][match_indexes[matches]] = all_gw[[ngw]][[2]][matches]
final_data[[40+ngw]][match_indexes[matches]] = all_gw[[ngw]][[4]][matches]
final_data[[78+ngw]][match_indexes[matches]] = all_gw[[ngw]][[5]][matches]
}
}
return(final_data)
}
#Call our functions
gameweeks <- c(1:38)
gameweek_data<- lapply(gameweeks,fplscraper)
#Call our functions
gameweeks <- c(1:38)
gameweek_data<- lapply(gameweeks,fplscraper)
#Call our functions
gameweeks <- c(1:38)
gameweek_data<- lapply(gameweeks,fplscraper)
#Call our functions
gameweeks <- c(1:38)
gameweek_data<- lapply(gameweeks,fplscraper)
library(jsonlite)
stat00 <- fromJSON("https://fantasy.premierleague.com/api/bootstrap-static/")
# Remove all items in Environment!
rm(list = ls())
ls()
# Load packages
pacman::p_load(tidyverse, data.table, readxl, writexl, glue, wesanderson,
RColorBrewer, viridis, ggrepel, ggthemes, ggsci, mFilter,
quantmod, corrplot, cowplot, readstata13, readr, knitr,
kableExtra, stargazer, parameters, colorspace, dendextend,
ggdendro, purrr, cluster, plotly, DescTools, factoextra,
grid, gridExtra, ggsoccer, RCurl, tidytext, rvest, fplscrapR)
options(tz = "Europe/London")
# Working directory
setwd("~/OneDrive - The University of Nottingham/BB_SideProject/2022FPL")
library(jsonlite)
stat00 <- fromJSON("https://fantasy.premierleague.com/api/bootstrap-static/")
View(stat00)
names(stat00$total_players)
stat00[["total_players"]]
head(stat00$events)
head(stat00$teams)
stat01 <- data_frame(stat00$teams)
stat01 <- tibble(stat00$teams)
View(stat01)
stat01 <- tibble(stat00$teams)
head(stat01)
stat02 <- tibble(stat00$elements)
head(stat02)
View(stat02)
stat03 <- tibble(stat00$element_stats)
head(stat03)
View(stat03)
stat04 <- tibble(stat00$element_types)
head(stat04)
View(stat04)
View(stat02)
glimpse(stat02)
View(stat04)
stat00[["element_types"]][["sub_positions_locked"]][[1]]
View(stat01)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id"))
View(stat05)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id")) %>%
select(first_name, second_name, name) %>%
slice_head(5)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id")) %>%
select(first_name, second_name, name) %>%
slice_head(n = 5)
View(stat05)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id"))
stat05 %>%
select(first_name, second_name, name) %>%
slice_head(n = 5)
View(stat03)
View(stat04)
stat06 <- stat05 %>%
left_join(stat04, by = c("id" = "id"))
stat06 <- stat05 %>%
left_join(stat04, by = c("id" = "id")) %>%
rename(
"team_name" = name,
"position_name" = singular_name
)
stat06 <- stat05 %>%
left_join(stat04, by = c("id" = "id")) %>%
rename(
"team_name" = name,
"position_name" = singular_name
)
stat06 %>%
select(first_name, second_name, team_name, position_name) %>%
slice_head(n = 5)
View(stat06)
stat06 <- stat05 %>%
left_join(stat04, by = c("element_type" = "id")) %>%
rename(
"team_name" = name,
"position_name" = singular_name
)
stat06 %>%
select(first_name, second_name, team_name, position_name) %>%
slice_head(n = 5)
View(stat06)
View(stat06)
View(stat01)
#team
stat01 <- tibble(stat00$teams) %>%
select(id, name, short_name, strenght)
#team
stat01 <- tibble(stat00$teams) %>%
select(id, name, short_name, strength)
head(stat01)
View(stat02)
str(stat02)
#player
stat02 <- tibble(stat00$elements) %>%
select(
first_name,
id,
now_cost,
points_per_game,
second_name,
selected_by_percent,
team,
team_code,
total_points,
value_form,
value_season,
web_name,
minutes,
goals_scored,
assists,
clean_sheets,
goals_conceded,
saves,
bps,
influence,
creativity,
threat,
ict_index,
influence_rank,
influence_rank_type,
creativity_rank,
creativity_rank_type,
threat_rank,
threat_rank_type,
ict_index_rank,
ict_index_rank_type
)
head(stat02)
#player
stat02 <- tibble(stat00$elements) %>%
select(
first_name,
id,
now_cost,
points_per_game,
second_name,
selected_by_percent,
team,
team_code,
total_points,
value_form,
value_season,
web_name,
minutes,
goals_scored,
assists,
clean_sheets,
goals_conceded,
saves,
bps,
influence,
creativity,
threat,
ict_index,
influence_rank,
influence_rank_type,
creativity_rank,
creativity_rank_type,
threat_rank,
threat_rank_type,
ict_index_rank,
ict_index_rank_type
) %>%
mutate(
now_cost = now_cost / 10
)
head(stat02)
View(stat03)
View(stat04)
#player
stat02 <- tibble(stat00$elements) %>%
select(
first_name,
id,
now_cost,
points_per_game,
second_name,
selected_by_percent,
team,
team_code,
total_points,
value_form,
value_season,
web_name,
minutes,
goals_scored,
assists,
clean_sheets,
goals_conceded,
saves,
bps,
influence,
creativity,
threat,
ict_index,
influence_rank,
influence_rank_type,
creativity_rank,
creativity_rank_type,
threat_rank,
threat_rank_type,
ict_index_rank,
ict_index_rank_type,
element_type
) %>%
mutate(
now_cost = now_cost / 10
)
head(stat02)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id"))
stat05 %>%
select(first_name, second_name, name) %>%
slice_head(n = 5)
stat04 <- tibble(stat00$element_types) %>%
select(id, singular_name, singular_name_short)
head(stat04)
stat05 <- stat02 %>%
left_join(stat01, by = c("team" = "id"))
stat05 %>%
select(first_name, second_name, name) %>%
slice_head(n = 5)
stat06 <- stat05 %>%
left_join(stat04, by = c("element_type" = "id")) %>%
rename(
"team_name" = name,
"position_name" = singular_name
)
stat06 %>%
select(first_name, second_name, team_name, position_name) %>%
slice_head(n = 5)
View(stat06)
str(stat06)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric)
str(stat07)
View(stat07)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric)
str(stat07)
sapply(stat07, class)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric)
#str(stat07)
#sapply(stat07, class)
col01 <- c("points_per_game", "selected_by_percent", "value_form", "value_season", "influence", "creativity", "threat", "ict_index")
stat07[col01] <- sapply(stat07[col01], as.numeric)
str(stat07)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric) %>%
relocate(
id, web_name, team_name, position_name
)
#str(stat07)
#sapply(stat07, class)
col01 <- c("points_per_game", "selected_by_percent", "value_form", "value_season", "influence", "creativity", "threat", "ict_index")
stat07[col01] <- sapply(stat07[col01], as.numeric)
str(stat07)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric) %>%
relocate(
id, web_name, team_name, position_name, now_cost, points_per_game
)
#str(stat07)
#sapply(stat07, class)
col01 <- c("points_per_game", "selected_by_percent", "value_form", "value_season", "influence", "creativity", "threat", "ict_index")
stat07[col01] <- sapply(stat07[col01], as.numeric)
str(stat07)
stat07 <- stat06 %>%
mutate_if(is.integer, as.numeric) %>%
relocate(
id,
web_name,
team_name,
position_name,
now_cost,
points_per_game,
selected_by_percent,
minutes,
influence,
creativity,
threat,
ict_index
)
#str(stat07)
#sapply(stat07, class)
col01 <-
c(
"points_per_game",
"selected_by_percent",
"value_form",
"value_season",
"influence",
"creativity",
"threat",
"ict_index"
)
stat07[col01] <- sapply(stat07[col01], as.numeric)
str(stat07)
# Remove all items in Environment!
rm(list = ls())
ls()
