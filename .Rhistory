plot.caption = element_text(hjust = 1, size = 8),
axis.title.y = element_text(size = 10),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size =9),
strip.text.x = element_text(size = 8),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 210,
height = 297,
units = "mm")
catg05 <- list(
"ig10y" = "Indonesia 10-year IDR bond yield - in percentage",
"ig10p" = "Indonesia 10-year IDR bond price - in percentage",
"ig10r" = "Indonesia 10-year IDR bond return - in percentage",
"ug10y" = "Indonesia 10-year USD bond yield - in percentage",
"ug10p" = "Indonesia 10-year USD bond price - in percentage",
"ug10r" = "Indonesia 10-year USD bond return - in percentage"
)
catg06 <- function(variable,value){
return(catg05[value])
}
catg07 <- c(
ig10y = "Indonesia 10-year IDR bond yield - in percentage",
ig10p = "Indonesia 10-year IDR bond price - in percentage",
ig10r = "Indonesia 10-year IDR bond return - in percentage",
ug10y = "Indonesia 10-year USD bond yield - in percentage",
ug10p = "Indonesia 10-year USD bond price - in percentage",
ug10r = "Indonesia 10-year USD bond return - in percentage"
)
idx <- match(dai05$var, names(catg07))
dai05$var02 <- catg07[idx]
ee <- c("ig10r", "ug10r")
plot03 <-  dai05 %>% dplyr::filter(var == "ig10r"  | var == "ug10r") %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var,
labeller = catg06,
ncol = 1,
scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 13,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 12),
plot.caption = element_text(hjust = 1, size = 8),
axis.title.y = element_text(size = 10),
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size =9),
strip.text.x = element_text(size = 8),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 210,
height = 297,
units = "mm")
ee <- c("ig10r", "ug10r")
plot03 <-  dai05 %>% dplyr::filter(var == "ig10r"  | var == "ug10r") %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var,
labeller = catg06,
ncol = 2,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 15,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 14),
plot.caption = element_text(hjust = 1, size = 10),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 11),
strip.text.x = element_text(size = 10),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
ee <- c("ig10r", "ug10r")
plot03 <-  dai05 %>% dplyr::filter(var == "ig10r"  | var == "ug10r") %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var,
labeller = catg06,
ncol = 2,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 12),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
ee <- c("ig10r", "ug10r")
plot03 <-  dai05 %>% dplyr::filter(var == "ig10r"  | var == "ug10r") %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var,
labeller = catg06,
ncol = 2,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 17),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
ee <- c("ig10r", "ug10r")
plot03 <-  dai05 %>% dplyr::filter(var == "ig10r"  | var == "ug10r") %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var02,
labeller = labeller(
var02 = label_wrap_gen(40)),
#nrow = 7,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 17),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_return.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
View(dai03)
catg02 <- list(
"ig10_yield" = "Indonesia 10-year IDR bond yield - in percentage",
"ig10_price" = "Indonesia 10-year IDR bond price - in percentage",
"vixi" = "VIX index",
"forh" = "Foreign holdings' share - in percentage",
"fnbp" = "Foreign: Non-central bank/government holdings' share - in percentage",
"fcbp" = "Foreign: Central bank/government holdings' share - in percentage",
"exfp" = "The forward point - in percentage",
"ibor" = "Interbank offer rate - in percentage",
"idie" = "Inflation rate expectation - in percentage",
"toid" = "IDR tradable bonds over industrial output",
"loid" = "Government loans over industrial output",
"us10" = "US 10-year bond yield - in percentage",
"rtng" = "Indonesia's credit rating",
"bnks_mon" = "Domestic: Commercial bank holdings' share - in percentage",
"cbbi_gross" = "Domestic: The central bank holding's share - in percentage",
"inpf" = "Domestic: Insurance comp./pension funds holdings' share - in percentage",
"ogusa" = "US output gap",
"ogidn" = "Indonesia's output gap",
"ogg7" = "G7 countries' output gap",
"ig10_volp" = "Indonesia 10-year IDR bond price - volatility (standard deviation)",
"ig10_voly" = "Indonesia 10-year IDR bond yield - volatility (standard deviation)",
"spaa" = "Moody's Baa corporate bond vs. US 10-year bond - in percentage",
"spus" = "Indonesia's USD 10-year bond vs. US 10-year bond - in percentage",
"pcrt" = "Malaysia, Philippines, and Thailand's credit ratings and outlook - average",
"pc10" = "Malaysia, Philippines, and Thailand's bond yield - average, in percentage",
"ug10_yield" = "Indonesia 10-year USD bond yield - in percentage",
"ug10_price" = "Indonesia 10-year USD bond price - in percentage",
"msci" = "MSCI emerging market index",
"cd10" = "Indonesia 10-year credit default swap - in basis points",
"tovr" = "The turnover ratio of domestic government bond market",
"frst" = "Foreign investors' holdings in stocks - net changes within a month, IDR trillion",
"frstem" = "Foreign investors' holdings in stocks - net changes in the end of month, IDR trillion"
)
catg03 <- function(variable,value){
return(catg02[value])
}
catg04 <- c(
ig10_yield = "Indonesia 10-year IDR bond yield - in percentage",
ig10_price = "Indonesia 10-year IDR bond price - in percentage",
vixi = "VIX index",
forh = "Foreign holdings' share - in percentage",
fnbp = "Foreign: Non-central bank/government holdings' share - in percentage",
fcbp = "Foreign: Central bank/government holdings' share - in percentage",
exfp = "The forward point - in percentage",
ibor = "Interbank offer rate - in percentage",
idie = "Inflation rate expectation - in percentage",
toid = "IDR tradable bonds over industrial output",
loid = "Government loans over industrial output",
us10 = "US 10-year bond yield - in percentage",
rtng = "Indonesia's credit rating",
bnks_mon = "Domestic: Commercial bank holdings' share - in percentage",
cbbi_gross = "Domestic: The central bank holding's share - in percentage",
inpf = "Domestic: Insurance comp./pension funds holdings' share - in percentage",
ogusa = "The U.S. output gap",
ogidn = "Indonesia's output gap",
ogg7 = "G7 countries' output gap",
ig10_volp = "Indonesia 10-year IDR bond price - volatility (standard deviation)",
ig10_voly = "Indonesia 10-year IDR bond yield - volatility (standard deviation)",
spaa = "Moody's Baa corporate bond vs. US 10-year bond - in percentage",
spus = "Indonesia's USD 10-year bond vs. US 10-year bond - in percentage",
pcrt = "Malaysia, Philippines, and Thailand's credit ratings and outlook - average",
pc10 = "Malaysia, Philippines, and Thailand's bond yield - average, in percentage",
ug10_yield = "Indonesia 10-year USD bond yield - in percentage",
ug10_price = "Indonesia 10-year USD bond price - in percentage",
msci = "MSCI emerging market index",
cd10 = "Indonesia 10-year credit default swap - in percentage",
tovr = "The turnover ratio of domestic government bond market",
frst = "Foreign investors' holdings in stocks - net changes within a month, IDR trillion",
frstem = "Foreign investors' holdings in stocks - net changes in the end of month, IDR trillion"
)
idx <- match(dai03$var, names(catg04))
dai03$var02 <- catg04[idx]
zz <- c("frst", "frstem")
plot03 <-  dai03 %>% dplyr::filter(var %in% bb) %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var02,
labeller = labeller(
var02 = label_wrap_gen(40)),
#nrow = 7,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 17),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_frst.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
zz <- c("frst", "frstem")
plot03 <-  dai03 %>% dplyr::filter(var %in% zz) %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var02,
labeller = labeller(
var02 = label_wrap_gen(40)),
#nrow = 7,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 17),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_frst.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
zz <- c("frst", "frstem")
plot03 <-  dai03 %>% dplyr::filter(var %in% zz) %>%
ggplot(aes(x = month, na.rm = TRUE)) +
geom_line(aes(y = val), size =0.4) +
theme_bw() +
facet_wrap(~var02,
labeller = labeller(
var02 = label_wrap_gen(50)),
#nrow = 7,
#scales = "free_y",
strip.position = "top") +
ylab(NULL) +
xlab(NULL) +
#labs(title = "Observable variables of the daily dataset",
#     subtitle = "27 Mar. 2008 to 30 Sep. 2019",
#     caption = "\nSource: Indonesia's MoF, Bloomberg") +
theme(plot.title = element_text(hjust=0,size = 17,face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 16),
plot.caption = element_text(hjust = 1, size = 12),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 13),
axis.text.x = element_text(size = 13),
strip.text.x = element_text(size = 17),
panel.grid.major = element_blank(),
panel.ontop = FALSE,
legend.position = "none",
plot.title.position = "plot",
plot.caption.position =  "plot")
plot03
ggsave(filename="20210526_frst.pdf",
device = cairo_pdf,
width = 297,
height = 210,
units = "mm")
setwd("~/OneDrive - The University of Nottingham/03_ResearchAssistant/EconomicTracker/UKDA")
setwd("/Users/arifpras/OneDrive - The University of Nottingham/03_ResearchAssistant/EconomicTracker/UKDA")
#library
library(maps)
library(mapdata)
library(maptools)
library(rgdal)
library(ggmap)
library(ggplot2)
library(rgeos)
library(broom)
library(plyr)
library(readxl)
library(tidyverse)
library(wesanderson)
library(Cairo)
#install.packages("devtools") #If required
devtools::install_github("tidyverse/ggplot2")
#Open mapfile: mapdata.rda
mapdata <- readRDS(file = "mapdata.Rda")
#Import the NUTS2 wellbeing database
#dblong <- read_excel("20210406_geospatial.xlsx", sheet = "dblong")
#saveRDS(dblong, file = "dblong.Rda")
dblong <- readRDS(file = "dblong.Rda")
#Join nuts2wb with mapdata
scghq2 <- dblong %>% dplyr::filter(ghqcd == "scghq2_dv")
#scghq1 <- dblong %>% dplyr::filter(ghqcd == "scghq1_dv")
##https://stackoverflow.com/questions/51295402/r-on-macos-error-vector-memory-exhausted-limit-reached
##https://bioinfocore.com/unix/r-set-memory-limit-on-mac-for-rstudio/
dbchart <- join(mapdata, scghq2, by="id") #time: 1 minute
str(dbchart)
rm(dblong, mapdata, scghq2)
#Palette
wes <- wes_palette("Zissou1", 100, type = "continuous")
#new list
survnm <- list(
"1" = "Wave 10" ,
"2" = "COVID-19 survey: \n April 2020",
"3" = "COVID-19 survey: \n May 2020",
"4" = "COVID-19 survey: \n June 2020",
"5" = "COVID-19 survey: \n July 2020",
"6" = "COVID-19 survey: \n September 2020",
"7" = "COVID-19 survey: \n November 2020"
)
survlb <- function(variable,value){
return(survnm[value])
}
library(tidyverse)
library(Cairo)
chart00 <- dbchart %>%
dplyr::filter(ghqcd == "scghq2_dv") %>%
ggplot(label = sprintf("%0.2f",
round(ghqval, digits = 2))) +
geom_polygon(aes(x = long, y = lat,
group = group,
fill = ghqval),
color = "#FFFFFF", size = 0.25) +
coord_fixed(1) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.text = element_text(size = 10),
legend.key.size = unit(0.5, 'cm'),
plot.title = element_text(hjust = 0, size = 14,
face = "bold"),
plot.subtitle = element_text(hjust = 0, size = 11),
plot.caption = element_text(hjust = 1, size = 10),
legend.position = "right",
plot.title.position = "plot",
plot.caption.position =  "plot") +
guides(fill = guide_legend(title = "")) +
labs(title = "Subjective wellbeing (GHQ): Caseness",
subtitle = "This measure converts valid answers to 12 questions of the General Health Questionnaire (GHQ)
to a single scale by recoding 1 and 2 values on individual variables to 0, and 3 and 4 values to 1, and then summing,
giving a scale running from 0 (the least distressed) to 12 (the most distressed).
See Cox, B.D et al, The Health and Lifestyle Survey. (London: Health Promotion Research Trust, 1987).",
caption = "Source: University of Essex, Institute for Social and Economic Research (2020 & 2021)") +
scale_fill_gradientn(colours = wes,
limits = c(1.4, 3.5),
breaks = c(1.4, 2.1, 2.8, 3.5)) +
facet_wrap(~srvcd, ncol = 4,
labeller = survlb,
strip.position = "bottom")
rm(dbchart)
chart00
mylib <- c('sf', 'osmdata', 'raster', 'tidyverse', 'lwgeom', 'RColorBrewer', 'showtext', 'rvest', 'ggmap', 'maps', 'mapdata', 'maptools', 'rgdal', 'ggplot2', 'rgeos', 'broom', 'plyr')
library(mylib)
mylib <- c(sf, osmdata, raster, tidyverse, lwgeom, RColorBrewer, showtext, rvest, ggmap, maps, mapdata, maptools, rgdal, ggplot2, rgeos, broom, plyr)
devtools::install_github("jakesherman/packages")
install.packages('easypackages)
install.packages('easypackages')
install.packages('easypackages')
libraries(mylib)
easypackages::libraries(mylib)
mylib
#Load the shapefile - make sure you change the filepath to where you saved the shapefiles
shapefile <- readOGR(dsn="C:/Users/lexapsu/OneDrive - The University of Nottingham/03_R/geospatial/Local_Authority_Districts_(December_2019)_Boundaries_UK_BFC", layer="Local_Authority_Districts_(December_2019)_Boundaries_UK_BFC")
#Reshape for ggplot2 using the Broom package
mapdata <- tidy(shapefile, region="lad19nm") #This might take a few minutes
mapdata <- mapdata %>% mutate(lat2=lat/10000, long2=long/10000)
#Check the shapefile has loaded correctly by plotting an outline map of the UK
gg <- ggplot() + geom_polygon(data = mapdata, aes(x = long2, y = lat2, group = group), color = "#FFFFFF", size = 0.25, alpha = 0.5)
gg <- gg + coord_fixed(1) #This gives the map a 1:1 aspect ratio to prevent the map from appearing squashed
print(gg)
getbb('Britain and Ireland')
uk <- opq_osm_id(id = 62149, type = 'relation') %>% opq_string() %>% osmdata_sf()
ggmap(uk)
uk <- get_map(location="United Kingdom", zoom=5, maptype='toner', source='stamen', color='color')
pacman::p_load(tidyverse,
stats,
ggsoccer,
utils,
tidytext,
rvest,
corrr,
jsonlite,
fuzzyjoin,
stringr,
viridis,
tictoc)
setwd("C:/Users/lexapsu/OneDrive - The University of Nottingham/BB_SideProject/BelutListrik")
def08b <- readRDS("def08b.rds")
def09b <- readRDS("def09b.rds")
def10b <- readRDS("def10b.rds")
def11 <- def08b %>%
bind_rows(def09b) %>%
unique()
